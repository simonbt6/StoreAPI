<Application x:Class="AdminPanel.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AdminPanel"
             xmlns:framework="clr-namespace:AdminPanel.Content.Views.Components.Meters"
             StartupUri="Content\Views\LoginWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <framework:AngleToLargeConverter x:Key="isLargeConverter"/>
            <framework:AngleToPointConverter x:Key="prConverter"/>
            <Style TargetType="Button" x:Key="TabButton">
                <Setter Property="Background" Value="White" />
                <Setter Property="TextBlock.TextAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="{TemplateBinding Border.CornerRadius}" 
                        Background="Red" BorderBrush="#ccc" 
                        BorderThickness="1" >
                                <ContentPresenter x:Name="contentPresenter" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Content="{TemplateBinding Content}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button" x:Key="TabButtonFirst" BasedOn="{StaticResource TabButton}">
                <Setter Property="Border.CornerRadius" Value="45, 45, 45, 45"/>
            </Style>

            <Style TargetType="Button" x:Key="TabButtonLast" BasedOn="{StaticResource TabButton}">
                <Setter Property="Border.CornerRadius" Value="0,0,0,3" />
            </Style>
            <Style x:Key="circularProgressBar" TargetType="{x:Type framework:CircularProgressbar}">
                <Setter Property="Value" Value="10"/>
                <Setter Property="Maximum" Value="100"/>
                <Setter Property="StrokeThickness" Value="10"/>
                <Setter Property="Width" Value="100"/>
                <Setter Property="Height" Value="100"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type framework:CircularProgressbar}">
                            <Canvas Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Ellipse Width="100" Height="100" Stroke="{TemplateBinding Foreground}"
                                     StrokeThickness="2"/>

                                <Path Stroke="{TemplateBinding Background}" 
                                  StrokeThickness="{TemplateBinding StrokeThickness}">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathFigure x:Name="fig" StartPoint="50,0">
                                                <ArcSegment RotationAngle="0" SweepDirection="Clockwise"
                                                        Size="50,50"
                                                        Point="{Binding Path=Angle, Converter={StaticResource prConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=ProgressBar}}"
                                                        IsLargeArc="{Binding Path=Angle, Converter={StaticResource isLargeConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=ProgressBar}}"
                                                        >
                                                </ArcSegment>
                                            </PathFigure>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                                <Border Width="100" Height="100">
                                    <TextBlock Foreground="Gray" HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Text="{Binding Path=Value, StringFormat={}{0} ms, 
                                RelativeSource={RelativeSource TemplatedParent}}"
                                           FontSize="{TemplateBinding FontSize}"/>
                                </Border>
                            </Canvas>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
        </ResourceDictionary>
        
    </Application.Resources>
</Application>

